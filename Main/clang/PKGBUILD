# Maintainer: DJ Lucas <dj@linuxfromscratch.org>

pkgname=clang
pkgver=10.0.1
pkgrel=1
pkgdesc="The LLVM package contains a collection of modular and reusable compiler and toolchain technologies."
arch=('x86_64')
url="https://github.com/llvm/"
license=('GPL3')
groups=('core')
depends=('glibc')
makedepends=('bash'
             'binutils'
             'cmake'
             'coreutils'
             'gcc'
             'grep'
             'make'
             'ninja'
             'sed')
optdepends=('doxygen'
            'git'
            'graphviz'
            'libxml2'
            'python2'
            'ocaml'
            'python2-pyyaml'
            'rsync'
            'python3-sphinx'
            'tex'
            'valgrind'
            'zip')
source=("https://github.com/llvm/llvm-project/releases/download/llvmorg-${pkgver}/${pkgname}-${pkgver}.src.tar.xz"
        "https://github.com/llvm/llvm-project/releases/download/llvmorg-${pkgver}/clang-tools-extra-$pkgver.src.tar.xz"
        "https://github.com/llvm/llvm-project/releases/download/llvmorg-${pkgver}/llvm-${pkgver}.src.tar.xz")
prepare(){
  cd "${pkgname}-${pkgver}.src"
  mkdir -v build
  mv "${srcdir}/clang-tools-extra-${pkgver}.src" tools/extra
  sed '/add_clang_subdirectory(handle-llvm)/d' \
      -i tools/clang-fuzzer/CMakeLists.txt
}

build(){
  cd "${pkgname}-${pkgver}.src/build"
  _mflags=`echo "${MAKEFLAGS}" | grep -o -- "-j[ ]\{0,1\}[0-9]\{1,2\}"`
  CC=gcc CXX=g++                                  \
  cmake -DCMAKE_INSTALL_PREFIX=/usr               \
        -DLLVM_ENABLE_FFI=ON                      \
        -DCMAKE_BUILD_TYPE=Release                \
        -DLLVM_BUILD_LLVM_DYLIB=ON                \
        -DLLVM_LINK_LLVM_DYLIB=ON                 \
        -DLLVM_ENABLE_RTTI=ON                     \
        -DCLANG_LINK_CLANG_DYLIB=ON               \
        -DLLVM_BUILD_TESTS=ON                     \
        -DLLVM_EXTERNAL_LIT=/usr/bin/lit          \
        -DPYTHON_EXECUTABLE=/usr/bin/python3      \
        -DLLVM_MAIN_SRC_DIR="${srcdir}/llvm-${pkgver}.src" \
        -Wno-dev -G Ninja ..
  ninja -j 4 #${_mflags}
}

check(){
  cd "${pkgname}-${pkgver}.src/build"
  _mflags=`echo "${MAKEFLAGS}" | grep -o -- "-j[ ]\{0,1\}[0-9]\{1,2\}"`
  ninja ${_mflags} check-clang{,-tools} || true
  # six tests are known to fail
}

package(){
  cd "${pkgname}-${pkgver}.src/build"
  DESTDIR="${pkgdir}" ninja install
}

sha256sums=('f99afc382b88e622c689b6d96cadfa6241ef55dca90e87fc170352e12ddb2b24'
            'd093782bcfcd0c3f496b67a5c2c997ab4b85816b62a7dd5b27026634ccf5c11a'
            'c5d8e30b57cbded7128d78e5e8dad811bff97a8d471896812f57fa99ee82cdf3')
