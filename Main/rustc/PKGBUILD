# Maintainer: DJ Lucas <dj@linuxfromscratch.org>

pkgname=rustc
pkgver=1.42.0
pkgrel=1
pkgdesc="The Rust programming language is designed to be a safe, concurrent, practical language."
arch=('x86_64')
url="https://www.rust-lang.org/"
license=('GPL3')
groups=('core')
provides=('rust')
depends=('curl'
         'glibc'
         'libffi'
         'libssh2')
makedepends=('bash'
             'binutils'
             'clang'
             'cmake'
             'coreutils'
             'diffutils'
             'grep'
             'sed')
source=("https://static.rust-lang.org/dist/${pkgname}-${pkgver}-src.tar.gz")
_mflags=`echo "${MAKEFLAGS}" | grep -o -- "-j[ ]\{0,1\}[0-9]\{1,2\}" | sed 's@-j[ ]@--jobs @'`

build(){
  cd "${pkgname}-${pkgver}-src"
  cat > config.toml << "EOF"
# see config.toml.example for more possible options
# See the 8.4 book for an example using shipped LLVM
# e.g. if not installing clang, or using a version before 10.0
[llvm]
# by default, rust will build for a myriad of architectures
targets = "X86"

# When using system llvm prefer shared libraries
link-shared = true

[build]
# omit docs to save time and space (default is to build them)
docs = false

# install cargo as well as rust
extended = true

[install]
prefix = "/usr"
docdir = "share/doc/rustc-1.42.0"

[rust]
channel = "stable"
rpath = false

# BLFS does not install the FileCheck executable from llvm,
# so disable codegen tests
codegen-tests = false

[target.x86_64-unknown-linux-gnu]
# NB the output of llvm-config (i.e. help options) may be
# dumped to the screen when config.toml is parsed.
llvm-config = "/usr/bin/llvm-config"

[target.i686-unknown-linux-gnu]
# NB the output of llvm-config (i.e. help options) may be
# dumped to the screen when config.toml is parsed.
llvm-config = "/usr/bin/llvm-config"

EOF
  export RUSTFLAGS="${RUSTFLAGS} -C link-args=-lffi"
  python3 ./x.py build --exclude src/tools/miri ${_mflags}
}

#check(){
#  cd "${pkgname}-${pkgver}-src"
#  python3 ./x.py test --verbose --no-fail-fast || true
#}

package(){
  cd "${pkgname}-${pkgver}-src"
  export LIBSSH2_SYS_USE_PKG_CONFIG=1
  DESTDIR="${pkgdir}" python3 ./x.py install ${_mflags}
}

sha256sums=('d2e8f931d16a0539faaaacd801e0d92c58df190269014b2360c6ab2a90ee3475')
