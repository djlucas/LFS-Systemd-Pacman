# Maintainer: DJ Lucas <dj_AT_linuxfromscratch_DOT_org>

pkgname=glibc
pkgver=2.32
pkgrel=1
pkgdesc="The Glibc package contains the main C library. This library provides the basic routines for allocating memory, searching directories, opening and closing files, reading and writing files, string handling, pattern matching, arithmetic, and so on."
arch=('x86_64')
url="http://www.gnu.org/software/libc/"
groups=('core')
license=('GPL')
install='glibc.install'
makedepends=('bash'
             'binutils'
             'coreutils'
             'diffutils'
             'gawk'
             'gcc'
             'gettext'
             'grep'
             'gzip'
             'linux-api-headers'
             'make'
             'perl'
             'sed'
             'texinfo')
depends=('rootfs')
#options=(!debug
#         !strip
#         staticlibs)
# Don't use !strip for deug builds
options=('staticlibs')
backup=('etc/ld.so.cache'
        'etc/locale.gen'
        'etc/nscd.conf'
        'etc/nsswitch.conf')
source=("https://ftp.gnu.org/gnu/${pkgname}/${pkgname}-${pkgver}.tar.xz"
        "http://www.linuxfromscratch.org/patches/downloads/${pkgname}/${pkgname}-${pkgver}-fhs-1.patch"
        "locale.gen.txt"
        "locale-gen")

prepare(){
  #srcdir is used internally
  test "z${sourcesdir}" == "z" && sourcesdir=${srcdir} && unset srcdir

  cd "${sourcesdir}/${pkgname}-${pkgver}"
  patch -Np1 -i "${sourcesdir}/${pkgname}-${pkgver}-fhs-1.patch"
  mkdir build
}

build(){
  #srcdir is used internally
  test "z${sourcesdir}" == "z" && sourcesdir="${srcdir}" && unset srcdir

  # remove hardening options for building libraries - thanks Arch Linux!
  CFLAGS=${CFLAGS/-fstack-protector-strong/}
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}

  cd "${sourcesdir}/${pkgname}-${pkgver}/build"

  ../configure                                        \
      --prefix=/usr                                   \
      --disable-werror                                \
      --enable-kernel=3.2                             \
      --enable-stack-protector=strong                 \
      libc_cv_slibdir=/lib
  make
}

check(){
  #srcdir is used internally in the glibc makefile
  test "z${sourcesdir}" == "z" && sourcesdir="${srcdir}" && unset srcdir

  cd "${sourcesdir}/${pkgname}-${pkgver}/build"
  make -k check || true

  # Get test rusults together into one file
  for file in `find . -name "*.sum"`
  do
    cat $file >> tests-summary
  done
  _FAILCOUNT=`grep -c "^FAIL" tests-summary`
  # Known failures in chroot:
  #  elf/circleload1
  #  elf/constload1
  #  elf/dblload
  #  elf/dblunload
  #  elf/lateglobal
  #  elf/reldep6
  #  elf/resolvfail
  #  elf/tst-audit4
  #  elf/tst-audit5
  #  elf/tst-audit6
  #  elf/tst-audit7
  #  elf/tst-global1
  #  elf/tst-initfinilazyfail
  #  elf/tst-latepthread
  #  elf/circleload1
  #  elf/constload1
  #  elf/dblload
  #  elf/dblunload
  #  elf/lateglobal
  #  elf/reldep6
  #  elf/resolvfail
  #  elf/tst-audit4
  #  elf/tst-audit5
  #  elf/tst-audit6
  #  elf/tst-audit7
  #  elf/tst-global1
  #  elf/tst-initfinilazyfail
  #  elf/tst-latepthread

  # Just make sure number of failures is no more than the known 28 failures
  test x"${_FAILCOUNT}" != "x" || _FAILCOUNT="0"
  test "${_FAILCOUNT}" -lt "29" || exit 1
}

package(){

  #srcdir is used internally
  test "z${sourcesdir}" == "z" && sourcesdir=${srcdir} && unset srcdir

  # locale-gen taken from Arch Linux
  install -vdm755 "${pkgdir}/usr/bin"
  install -vm755 "${sourcesdir}/locale-gen" "${pkgdir}/usr/bin"
  install -vdm755 "${pkgdir}/etc"
  install -vm644 "${sourcesdir}/locale.gen.txt" "${pkgdir}/etc/locale.gen"
  # uncommet locales by default required for LFS testsuites
  echo "# These locales are requried for LFS testsuites, do not comment out" \
       >> "${pkgdir}/etc/locale.gen"
  echo "cs_CZ.UTF-8 UTF-8" >> "${pkgdir}/etc/locale.gen"
  echo "de_DE ISO-8859-1" >> "${pkgdir}/etc/locale.gen"
  echo "de_DE@euro ISO-8859-15" >> "${pkgdir}/etc/locale.gen"
  echo "de_DE.UTF-8 UTF-8" >> "${pkgdir}/etc/locale.gen"
  echo "en_GB.UTF-8 UTF-8" >> "${pkgdir}/etc/locale.gen"
  echo "en_HK ISO-8859-1" >> "${pkgdir}/etc/locale.gen"
  echo "en_PH ISO-8859-1" >> "${pkgdir}/etc/locale.gen"
  echo "en_US ISO-8859-1" >> "${pkgdir}/etc/locale.gen"
  echo "en_US.UTF-8 UTF-8" >> "${pkgdir}/etc/locale.gen"
  echo "es_MX ISO-8859-1" >> "${pkgdir}/etc/locale.gen"
  echo "fa_IR UTF-8" >> "${pkgdir}/etc/locale.gen"
  echo "fr_FR ISO-8859-1" >> "${pkgdir}/etc/locale.gen"
  echo "fr_FR@euro ISO-8859-15" >> "${pkgdir}/etc/locale.gen"
  echo "fr_FR.UTF-8 UTF-8" >> "${pkgdir}/etc/locale.gen"
  echo "it_IT ISO-8859-1" >> "${pkgdir}/etc/locale.gen"
  echo "it_IT.UTF-8 UTF-8" >> "${pkgdir}/etc/locale.gen"
  echo "ja_JP EUC-JP" >> "${pkgdir}/etc/locale.gen"
  echo "ru_RU.KOI8-R KOI8-R" >> "${pkgdir}/etc/locale.gen"
  echo "ru_RU.UTF-8 UTF-8" >> "${pkgdir}/etc/locale.gen"
  echo "tr_TR.UTF-8 UTF-8" >> "${pkgdir}/etc/locale.gen"
  echo "zh_CN.GB18030 GB18030" >> "${pkgdir}/etc/locale.gen"
  echo "" >> "${pkgdir}/etc/locale.gen"
  # Supply a list of all available locales
  sed -e '1,3d' -e 's|/| |g' -e 's|\\| |g' -e 's|^|#|g' \
    ${sourcesdir}/${pkgname}-${pkgver}/localedata/SUPPORTED \
    >> "${pkgdir}/etc/locale.gen"

  # install distributed files
  install -vdm755 ${pkgdir}/usr/lib/locale
  install -vdm755 ${pkgdir}/var/cache/nscd
  install -vm644 ${sourcesdir}/${pkgname}-${pkgver}/nscd/nscd.conf \
                 ${pkgdir}/etc/nscd.conf

  # Finally do the installation from the temporary destination
  cd "${sourcesdir}/${pkgname}-${pkgver}/build"  
  make DESTDIR="${pkgdir}" install

  # If not a debug build, then we need to specify !strip and do it manually
  if check_option 'debug' n; then
    # Executables
    find "$pkgdir"/usr/bin -type f -executable -exec strip $STRIP_BINARIES {} + 2> /dev/null || true
    find "$pkgdir"/usr/sbin -type f -executable -exec strip $STRIP_BINARIES {} + 2> /dev/null || true
    find "$pkgdir"/bin -type f -executable -exec strip $STRIP_BINARIES {} + 2> /dev/null || true
    find "$pkgdir"/sbin -type f -executable -exec strip $STRIP_BINARIES {} + 2> /dev/null || true

    # Libraries
    find "$pkgdir"/usr/lib -name '*.a' -type f -exec strip $STRIP_STATIC {} + 2> /dev/null || true
    find "$pkgdir"/lib -name '*.a' -type f -exec strip $STRIP_STATIC {} + 2> /dev/null || true
    find "$pkgdir"/usr/lib \
      -name '*.so' -type f -exec strip $STRIP_SHARED {} + 2> /dev/null || true

    # Do not strip these four for gdb and valgrind useability, strip the rest
    find "$pkgdir"/lib \
      -not -name 'ld-*.so' \
      -not -name 'libc-*.so' \
      -not -name 'libpthread-*.so' \
      -not -name 'libthread_db-*.so' \
      -name '*.so' -type f -exec strip $STRIP_SHARED {} + 2> /dev/null || true
  fi

  # Create /etc/nsswitch.conf
  cat > ${pkgdir}/etc/nsswitch.conf << "EOF"
# Begin /etc/nsswitch.conf

passwd: files
group: files
shadow: files

hosts: files dns
networks: files

protocols: files
services: files
ethers: files
rpc: files

# End /etc/nsswitch.conf
EOF

  # Install compatibility and lsb symlinks for x86_64
  install -vdm755 "${pkgdir}/lib64"
  ln -s ../lib/ld-linux-x86-64.so.2 "${pkgdir}/lib64"
  ln -s ../lib/ld-linux-x86-64.so.2 "${pkgdir}/lib64/ld-lsb-x86-64.so.3"
}

sha256sums=('1627ea54f5a1a8467032563393e0901077626dc66f37f10ee6363bb722222836'
            '643552db030e2f2d7ffde4f558e0f5f83d3fabf34a2e0e56ebdb49750ac27b0d'
            'd42648cea552ba5353a32e264686e992263289d5cc86207314dffc54ab514981'
            '83f108f915863c7ed0338e2d3e8f2e071a531a090ef8f8b2eb3a956a3c4f04d7')
